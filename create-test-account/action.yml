name: "Create Test Account"
description: "Create a new test account from a configuration file"
inputs:
  account_config_path:
    description: "The path to the test account configuration file"
    required: true
    type: string
  personal_access_key:
    description: "[SECRET] Personal Access Key generated in HubSpot that grants access to the CLI. If not provided, will use DEFAULT_PERSONAL_ACCESS_KEY from environment."
    required: false
    type: string
  account_id:
    description: "HubSpot account ID associated with the personal access key. If not provided, will use DEFAULT_ACCOUNT_ID from environment."
    required: false
    type: number
  cli_version:
    description: "Version of the HubSpot CLI to install. If not provided, will use DEFAULT_CLI_VERSION from environment."
    required: false
    type: string
outputs:
  personal_access_key:
    description: "The personal access key of the created test account"
    value: ${{ steps.create-test-account.outputs.personal_access_key }}
  account_id:
    description: "The account ID of the created test account"
    value: ${{ steps.create-test-account.outputs.account_id }}
runs:
  using: "composite"
  steps:
    - name: Install HubSpot CLI
      uses: ./install-hubspot-cli
      with:
        cli_version: ${{ inputs.cli_version }}
    - name: Create new HubSpot test account
      id: create-test-account
      shell: bash
      env:
        HUBSPOT_PERSONAL_ACCESS_KEY: ${{ inputs.personal_access_key || env.DEFAULT_PERSONAL_ACCESS_KEY }}
        HUBSPOT_ACCOUNT_ID: ${{ inputs.account_id || env.DEFAULT_ACCOUNT_ID }}
      run: |
        # Source shared utilities
        . "$GITHUB_ACTION_PATH/../scripts/action-utils.sh"

        # Validate account and personal access key
        validate_account_and_personal_access_key

        # Validate account config path
        if [ ! -f "${{ inputs.account_config_path }}" ]; then
          echo "Error: Test account config file not found at path: ${{ inputs.account_config_path }}"
          exit 1
        fi

        # Run test-account create command
        run_hs_command \
          "hs test-account create --use-env --json --config-path '${{ inputs.account_config_path }}'" \
          "true"

        # Parse and set outputs
        set_output_from_json "personal_access_key" ".personalAccessKey"
        set_output_from_json "account_id" ".accountId"

        echo "âœ… Test account created successfully"
