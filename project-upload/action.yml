name: "Project upload"
description: "Upload and build a HubSpot project in your account. If auto-deploy is enabled, the build will also be deployed to your account."
inputs:
  project_dir:
    description: "The path to the directory where your hsproject.json file is located"
    required: true
    default: ./
    type: string
  personal_access_key:
    description: "[SECRET] Personal Access Key generated in HubSpot that grants access to the CLI."
    required: true
    type: string
  account_id:
    description: "HubSpot account ID associated with the personal-access-key."
    required: true
    type: number
outputs:
  build_id:
    description: "The build ID of the created HubSpot project build"
runs:
  using: "composite"
  steps:
    - name: Upload source code to HubSpot Project
      shell: bash
      env:
        HUBSPOT_PERSONAL_ACCESS_KEY: ${{ inputs.personal_access_key }}
        HUBSPOT_ACCOUNT_ID: ${{ inputs.account_id }}
      working-directory: ${{ inputs.project_dir }}
      run: |
        # Print directory contents for debugging
        echo "::group::Directory contents"
        ls -la
        echo "::endgroup::"

        # Check if hsproject.json exists
        if [ ! -f "hsproject.json" ]; then
          echo "::error::hsproject.json not found in $(pwd)"
          exit 1
        fi

        # Run upload command with verbose output
        echo "::group::Running upload command"
        output=$(hs project upload --force-create --use-env --json--message "use experimental cli release (${GITHUB_SHA:0:7})") || {
          echo "::error::Command failed with output:"
          echo "$output"
          exit 1
        }
        echo "Command output: $output"
        echo "::endgroup::"

        # Try to parse JSON and set outputs
        if echo "$output" | jq . >/dev/null 2>&1; then
          echo "$output" | jq -r '{"build_id":.buildId, "deploy_id":.deployId} | to_entries | .[] | "\(.key)=\(.value)"' >> "$GITHUB_OUTPUT"
        else
          echo "::error::Failed to parse JSON output: $output"
          exit 1
        fi
